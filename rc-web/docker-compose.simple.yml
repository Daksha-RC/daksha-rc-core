version: '3.8'
services:
  postgres:
    image: postgres:17.2-bookworm
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5

  rc-web:
    image: rc-web:latest
    build:
      context: ..
      dockerfile: rc-web/Dockerfile
    environment:
      DATABASE_URL: ${DATABASE_URL}
      CLIENT_ORIGIN_URL: ${CLIENT_ORIGIN_URL:-http://localhost:3000}
      RUST_LOG: ${RUST_LOG:-info}
      BIND_ADDRESS: ${BIND_ADDRESS:-0.0.0.0}
      PORT: ${PORT:-8000}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGHOST: ${PGHOST:-postgres}
      PGPORT: ${PGPORT:-5432}
      PGUSER: ${PGUSER}
      PGPASSWORD: ${PGPASSWORD}
      PGSSLMODE: ${PGSSLMODE:-prefer}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/readyz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  db-data: