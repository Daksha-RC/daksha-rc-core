# Default values for rc-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ghcr.io/daksha-rc/rc-web
  # This sets the pull policy for images.
  imagePullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: v0.1.9-amd64

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8000

resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /healthz
    port: http
readinessProbe:
  httpGet:
    path: /readyz
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

databaseurl:
  valueFromSecret:
    enabled: true
    name: "" # If secrets is enabled and this value is empty then secrets from cnpg is used
    key: "" # The default value is uri if cnpg secrets are used
  value: "" # Optional:  If secrets enabled is false this value is used to connect to database. Eg:"postgresql://user:secretpassword@localhost:5432/mydatabase"
auth0:
  domain: "daksha.us.auth0.com"
  audience: "simpleapi"
clientOriginUrl: "http://localhost:8000"

# Ingress configuration using Traefik IngressRoute
# This creates a Traefik IngressRoute resource for routing external traffic to the application
ingress:
  # Enable/disable ingress creation
  enabled: true

  # Ingress class name (used for annotations, not directly in Traefik IngressRoute)
  className: "traefik"

  # Primary hostname for the application
  # Uses nip.io for local development - automatically resolves to 127.0.0.1
  host: "rc.150.241.245.84.io"

  # Path prefix for routing (default "/" matches all paths)
  path: "/"

  # Path matching type (Prefix, Exact, etc.)
  pathType: "Prefix"

  # TLS/SSL configuration
  tls:
    # Enable HTTPS with TLS termination
    enabled: false

    # Name of the Kubernetes secret containing TLS certificate
    # The secret should contain 'tls.crt' and 'tls.key' files
    secretName: "wildcard-tls"

  # Additional annotations to apply to IngressRoute resources
  # Example: rate limiting, authentication, etc.
  annotations:
    {}
    # traefik.ingress.kubernetes.io/rate-limit: "100"
    # traefik.ingress.kubernetes.io/auth-type: "basic"

  # Additional hosts can be configured for multi-domain setups
  # extraHosts:
  #   - host: "rc-staging.127.0.0.1.nip.io"
  #     paths:
  #       - path: "/"
  #         pathType: "Prefix"
  #   - host: "rc-prod.127.0.0.1.nip.io"
  #     paths:
  #       - path: "/api"
  #         pathType: "Prefix"
