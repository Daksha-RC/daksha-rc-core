name: Build and Push Basic Image

on:
  workflow_call:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: daksha-rc/rc-basic

jobs:
  build-and-push:
    name: Build and Push Multi-Platform Basic Image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    outputs:
      image-tag: ${{ steps.tag.outputs.tag }}
      image-digest: ${{ steps.build.outputs.digest }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch full history for git tags

      - name: Check disk space
        run: |
          echo "Available disk space:"
          df -h
          echo ""
          echo "Available space in GB:"
          df / | awk 'NR==2 {print int($4/1024/1024) " GB available"}'

      - name: Install Podman and QEMU
        run: |
          echo "🦭 Installing Podman and QEMU..."
          sudo apt-get update -qq
          sudo apt-get install -y podman qemu-user-static
          podman --version

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-make
        uses: davidB/rust-cargo-make@v1
        with:
          version: "0.37.24"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.DAKSHA_RC_ACTIONS_WRITE_PAT }}

      - name: Determine tag
        id: tag
        run: |
          # For workflow_call, use git tag or generate a fallback tag
          if GIT_TAG=$(git describe --tags --abbrev=0 2>/dev/null); then
            TAG="$GIT_TAG"
            echo "🏷️ Using git tag: $TAG"
          else
            TAG="workflow-$(date +%Y%m%d-%H%M%S)"
            echo "🏷️ Using generated tag: $TAG"
          fi

          # Validate tag format (relaxed for generated tags)
          if [[ "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+.*$ ]] || [[ "$TAG" =~ ^workflow-[0-9]+-[0-9]+$ ]]; then
            echo "✅ Tag format valid: $TAG"
          else
            echo "❌ Invalid tag format: $TAG (expected format: v1.2.3 or workflow-YYYYMMDD-HHMMSS)"
            exit 1
          fi

          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Build and push basic image
        id: build
        run: |
          echo "🏗️ Building and pushing basic image with tag: ${{ env.TAG }}"
          echo ""

          # Run the cargo make command
          TAG=${{ env.TAG }} cargo make build-and-push-basic-with-tag

          echo "✅ Build and push completed successfully"

      - name: Verify pushed images
        run: |
          echo "🔍 Verifying pushed images..."

          # Test pulling the multi-arch image
          podman pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }} || {
            echo "❌ Failed to pull multi-arch image"
            exit 1
          }

          echo "✅ Successfully verified pushed image"

      - name: Generate build summary
        run: |
          echo "## 🎉 Basic Image Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Successfully built and pushed basic image with tag:** \`${{ env.TAG }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Images Created:" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}\` (multi-arch)" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}-amd64\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}-arm64\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest\` (multi-arch)" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-amd64\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-arm64\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🚀 Usage:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "# Pull the multi-platform image" >> $GITHUB_STEP_SUMMARY
          echo "podman pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "# Or docker pull" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ℹ️ Build Details:" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Actor:** @${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Workflow:** [\`${{ github.workflow }}\`](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY

  notify-success:
    name: Notify Build Success
    runs-on: ubuntu-latest
    needs: build-and-push
    if: success()

    steps:
      - name: Create success annotation
        run: |
          echo "::notice title=Build Success::Successfully built and pushed basic image with tag ${{ needs.build-and-push.outputs.image-tag }}"

  notify-failure:
    name: Notify Build Failure
    runs-on: ubuntu-latest
    needs: build-and-push
    if: failure()

    steps:
      - name: Create failure annotation
        run: |
          echo "::error title=Build Failed::Failed to build and push basic image. Check the logs for details."
